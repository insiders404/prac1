Q.1) Write a program to demonstrate the use of various Data Types and Structures in python

---Numbers:
a = 5  
print("The type of a ", type(a))    
b = 40.5  
print("The type of b ", type(b))   
c = 1+3j  
print("The type of c ", type(c))  

----Strings:
str = " string using double quotes " 
print(str)  

---List:
list1  = [1, "hi", "Python", 2]    
#Checking type of given list  
print(type(list1))  
  
#Printing the list1  
print (list1)  
  
# List slicing  
print (list1[3:])  
  
# List slicing  
print (list1[0:2])   
  
# List Concatenation using + operator  
print (list1 + list1)  
  
# List repetation using * operator  
print (list1 * 3)

----Tuple:
tup  = ("hi", "Python", 2)    

# Checking type of tup  
print (type(tup))    
  
#Printing the tuple  
print (tup)  
  
# Tuple slicing  
print (tup[1:])    
print (tup[0:1])    
  
# Tuple concatenation using + operator  
print (tup + tup)    
  
# Tuple repatation using * operator  
print (tup * 3)

----Dictionary:
d = {1:"Jimmy", 2:"Alex", 3:"john", 4:"mike"}     
  
# Printing dictionary  
print (d)  
  
# Accesing value using keys  
print("1st name is"+d[1])   
print("2nd name is "+ d[4])    
  
print (d.keys())    
print (d.values())


Q.2) Write a Python program to demonstrate use of arrays and operations of arrays.

 # Creating array:
import array as ar
newarr = ar.array('d', [2.1, 4.5, 5.5])
print(newarr)

#Slicing python array:
import array as ar
newarr = ar.array('d', [2.1, 4.5,3.5,4.2,3.3, 5.5])
print("First element:", newarr[0])
print("Second element:", newarr[1])
print("Last element:", newarr[-1])
print(newarr[2:5]) # 3rd to 5th
print(newarr[:])   # beginning to end

# Length of array:
a = len(newarr)

#Changing Element:
import array as ar
num = ar.array('i', [1, 2, 3, 5, 7, 10])
num[0] = 0    
print(num) 

# Adding Element:

import array as ar
num = ar.array('i', [1, 2, 3])
ln=len(num)
print(ln) #length
num[0] = 0  #changing first element  
print(num)
num.append(4) #appending 4 to array
print(num)    
num.extend([5, 6, 7]) #extending numbers with 5,6,7
print(num)



# Insertion operation:

import array as ar
num = ar.array('i', [1, 2, 3, 5, 7, 10])
num.insert(1,9)
for x in num:
 print(x)

# Deletion operation:

import array as ar
num = ar.array('i', [1, 2, 3, 5, 7, 10])
num.remove(7)
for x in num:
 print(x)

Q.3) Write a program to demonstrate use of Sets and various operation on Sets in python.

set1 = set() 
set2 = set() 
  
# Adding elements to set1 
for i in range(1, 6): 
    set1.add(i) 
  
# Adding elements to set2 
for i in range(3, 8): 
    set2.add(i) 
  
print("Set1 = ", set1) 
print("Set2 = ", set2) 
print("\n") 
  
# Union of set1 and set2 
set3 = set1 | set2# set1.union(set2) 
print("Union of Set1 & Set2: Set3 = ", set3) 
  
# Intersection of set1 and set2 
set4 = set1 & set2# set1.intersection(set2) 
print("Intersection of Set1 & Set2: Set4 = ", set4) 
print("\n") 
  
# Checking relation between set3 and set4 
if set3 > set4: # set3.issuperset(set4) 
    print("Set3 is superset of Set4") 
elif set3 < set4: # set3.issubset(set4) 
    print("Set3 is subset of Set4") 
else : # set3 == set4 
    print("Set3 is same as Set4") 
  
# displaying relation between set4 and set3 
if set4 < set3: # set4.issubset(set3) 
    print("Set4 is subset of Set3") 
    print("\n") 
  
# difference between set3 and set4 
set5 = set3 - set4 
print("Elements in Set3 and not in Set4: Set5 = ", set5) 
print("\n") 
  
# Removing all the values of set5 
set5.clear() 
  
print("After applying clear on sets Set5: ") 
print("Set5 = ", set5) 

Code 2:

a = set()
b = set()

a.add(1)
a.add(2)
a.add(3)

b.add(3)
b.add(4)
b.add(5)

print("Union = ", a.union(b))
print("Intersection = ", a.intersection(b))
print("Difference = ", a.difference(b))
